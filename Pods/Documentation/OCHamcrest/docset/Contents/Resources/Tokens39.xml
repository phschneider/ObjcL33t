<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/HCMatcher.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/HCMatcher</TokenIdentifier>
			<Abstract type="html">    A matcher over acceptable values.
    
    A matcher is able to describe itself to give feedback when it fails.
    
    HCMatcher implementations should @b not directly implement this protocol.
    Instead, @b extend the HCBaseMatcher class, which will ensure that the HCMatcher API can grow
    to support new features and remain compatible with all HCMatcher implementations.</Abstract>
			<DeclaredIn>HCMatcher.h</DeclaredIn>
			
			<NodeRef refid="39"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/HCMatcher/matches:</TokenIdentifier>
			<Abstract type="html">    Evaluates the matcher for argument @a item.</Abstract>
			<DeclaredIn>HCMatcher.h</DeclaredIn>			
			
			<Declaration>- (BOOL)matches:(id)item</Declaration>
			<Parameters>
				<Parameter>
					<Name>item</Name>
					<Abstract type="html">The object against which the matcher is evaluated.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@c YES if @a item matches, otherwise @c NO.</Abstract></ReturnValue>
			<Anchor>//api/name/matches:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/HCMatcher/matches:describingMismatchTo:</TokenIdentifier>
			<Abstract type="html">    Evaluates the matcher for argument @a item.</Abstract>
			<DeclaredIn>HCMatcher.h</DeclaredIn>			
			
			<Declaration>- (BOOL)matches:(id)item describingMismatchTo:(id&lt;HCDescription&gt;)mismatchDescription</Declaration>
			<Parameters>
				<Parameter>
					<Name>item</Name>
					<Abstract type="html">The object against which the matcher is evaluated.</Abstract>
				</Parameter><Parameter>
					<Name>mismatchDescription</Name>
					<Abstract type="html">The description to be built or appended to if @a item does not match.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@c YES if @a item matches, otherwise @c NO.</Abstract></ReturnValue>
			<Anchor>//api/name/matches:describingMismatchTo:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/HCMatcher/describeMismatchOf:to:</TokenIdentifier>
			<Abstract type="html">    Generates a description of why the matcher has not accepted the item.
    
    The description will be part of a larger description of why a matching failed, so it should be
    concise.
    
    This method assumes that @c matches:item is false, but will not check this.
    </Abstract>
			<DeclaredIn>HCMatcher.h</DeclaredIn>			
			
			<Declaration>- (void)describeMismatchOf:(id)item to:(id&lt;HCDescription&gt;)mismatchDescription</Declaration>
			<Parameters>
				<Parameter>
					<Name>item</Name>
					<Abstract type="html">The item that the HCMatcher has rejected.</Abstract>
				</Parameter><Parameter>
					<Name>mismatchDescription</Name>
					<Abstract type="html">The description to be built or appended to.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/describeMismatchOf:to:</Anchor>
		</Token>
		
	</File>
</Tokens>